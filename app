import pandas as pd
import streamlit as st
import plotly.graph_objects as go
import plotly.express as px

# === –ù–ê–°–¢–†–û–ô–ö–ê –°–¢–†–ê–ù–ò–¶–´ ===
st.set_page_config(page_title="–ê–Ω–∞–ª–∏–∑ –≤—ã–ø—É—Å–∫–∞", layout="wide")

st.title("üìä –ü–∞–Ω–µ–ª—å –∞–Ω–∞–ª–∏–∑–∞ –≤—ã–ø—É—Å–∫–∞ –∏ —Ä–∞–∑—Ä—ã–≤–∞")

# === –ó–ê–ì–†–£–ó–ö–ê –§–ê–ô–õ–ê ===
uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ Excel/CSV —Å –¥–∞–Ω–Ω—ã–º–∏", type=["xlsx", "csv"])
if uploaded_file:
    if uploaded_file.name.endswith(".csv"):
        df = pd.read_csv(uploaded_file, parse_dates=["date"])
    else:
        df = pd.read_excel(uploaded_file, parse_dates=["date"])
    
    df = df.sort_values("date")

    # --- –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–ª–æ–Ω–æ–∫ ---
    df["year"] = df["date"].dt.year
    df["quarter"] = df["date"].dt.quarter
    df["quarter_label"] = df["year"].astype(str) + " Q" + df["quarter"].astype(str)
    
    # –ü—Ä–∏–º–µ—Ä –ø—Ä–∏—Ä–æ—Å—Ç–∞ –í–í–ü
    annual_gdp = df.groupby("year")["output_sa"].mean()
    if len(annual_gdp) >= 2:
        gdp_growth = round((annual_gdp.iloc[-1] / annual_gdp.iloc[-2] - 1) * 100, 1)
    else:
        gdp_growth = None

    # === –ë–ª–æ–∫ —Å –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º–∏ ===
    st.sidebar.subheader("üìà –ö–ª—é—á–µ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏")
    if gdp_growth is not None:
        st.sidebar.metric("–ü—Ä–∏—Ä–æ—Å—Ç –í–í–ü (–±–µ–∑ —Å–µ–∑–æ–Ω.)", f"{gdp_growth}%")
    st.sidebar.metric("–ü–æ—Å–ª–µ–¥–Ω—è—è –¥–∞—Ç–∞", df["date"].max().strftime("%Y-%m-%d"))
    st.sidebar.metric("–§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–ø—É—Å–∫", f"{df['output_sa'].iloc[-1]:,.0f}".replace(",", " "))

    # === –í–∫–ª–∞–¥–∫–∏ ===
    tab1, tab2, tab3 = st.tabs(["–†–∞–∑—Ä—ã–≤ –≤—ã–ø—É—Å–∫–∞", "–ó–∞–Ω—è—Ç–æ—Å—Ç—å", "–ö–∞–ø–∏—Ç–∞–ª –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏"])

    # === –í–∫–ª–∞–¥–∫–∞ 1: –í—ã–ø—É—Å–∫ + –†–∞–∑—Ä—ã–≤ ===
    with tab1:
        st.subheader("–î–∏–Ω–∞–º–∏–∫–∞ –≤—ã–ø—É—Å–∫–∞ –∏ —Ä–∞–∑—Ä—ã–≤")
        
        # –ì—Ä–∞—Ñ–∏–∫ 1: –í—ã–ø—É—Å–∫
        fig1 = go.Figure()
        fig1.add_trace(go.Scatter(x=df["date"], y=df["output"],
                                  mode="lines+markers", name="–§–∞–∫—Ç",
                                  line=dict(color="#62C358"),
                                  marker=dict(size=6, line=dict(width=1,color="#62C358"), color="white"),
                                  hovertext=df["quarter_label"]))
        
        fig1.add_trace(go.Scatter(x=df["date"], y=df["output_sa"],
                                  mode="lines+markers", name="–§–∞–∫—Ç (–±–µ–∑ —Å–µ–∑–æ–Ω.)",
                                  line=dict(color="#085800"),
                                  marker=dict(size=6, line=dict(width=1,color="#085800"), color="white"),
                                  hovertext=df["quarter_label"]))

        fig1.add_trace(go.Scatter(x=df["date"], y=df["potential_output_inv"],
                                  mode="lines+markers", name="–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –≤—ã–ø—É—Å–∫",
                                  line=dict(color="#A30008"),
                                  marker=dict(size=6, line=dict(width=1,color="#A30008"), color="white"),
                                  hovertext=df["quarter_label"]))

        # –õ–µ–Ω—Ç–∞ ¬±2.5%
        fig1.add_trace(go.Scatter(
            x=list(df["date"])+list(df["date"][::-1]),
            y=list(df["potential_output_inv"]*1.025)+list(df["potential_output_inv"]*0.975)[::-1],
            fill="toself",
            fillcolor="rgba(239,124,83,0.2)",
            line=dict(color="transparent"),
            showlegend=True,
            name="¬±2.5%"
        ))

        fig1.update_layout(title="–î–∏–Ω–∞–º–∏–∫–∞ –≤—ã–ø—É—Å–∫–∞ –≤ —Ü–µ–Ω–∞—Ö 2016 –≥–æ–¥–∞",
                           yaxis_title="–ú–ª–Ω/–ú–ª—Ä–¥ —Ä—É–±–ª–µ–π")

        st.plotly_chart(fig1, use_container_width=True)

        # –ì—Ä–∞—Ñ–∏–∫ 2: –†–∞–∑—Ä—ã–≤
        colors_gap = ["#085800" if x >= 0 else "#A30008" for x in df["output_gap_inventory"]]
        fig2 = go.Figure(go.Bar(
            x=df["date"], y=df["output_gap_inventory"], marker_color=colors_gap,
            hovertext=[f"{q}<br>–†–∞–∑—Ä—ã–≤: {v:,.0f}".replace(",", " ") 
                       for q,v in zip(df["quarter_label"], df["output_gap_inventory"])]
        ))
        fig2.update_layout(title="–†–∞–∑—Ä—ã–≤ –≤—ã–ø—É—Å–∫–∞", yaxis_title="–ú–ª–Ω/–ú–ª—Ä–¥ —Ä—É–±–ª–µ–π")

        st.plotly_chart(fig2, use_container_width=True)

    # === –í–∫–ª–∞–¥–∫–∞ 2: –ó–∞–Ω—è—Ç–æ—Å—Ç—å ===
    with tab2:
        st.subheader("–î–∏–Ω–∞–º–∏–∫–∞ –∑–∞–Ω—è—Ç–æ—Å—Ç–∏")
        fig3 = go.Figure()
        fig3.add_trace(go.Scatter(x=df["date"], y=df["employment"],
                                  mode="lines+markers", name="–§–∞–∫—Ç",
                                  line=dict(color="#085800"),
                                  marker=dict(size=6, line=dict(width=1,color="#085800"), color="white"),
                                  hovertext=df["quarter_label"]))
        fig3.add_trace(go.Scatter(x=df["date"], y=df["potential_employment"],
                                  mode="lines+markers", name="–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è",
                                  line=dict(color="#A30008"),
                                  marker=dict(size=6, line=dict(width=1,color="#A30008"), color="white"),
                                  hovertext=df["quarter_label"]))
        fig3.update_layout(title="–î–∏–Ω–∞–º–∏–∫–∞ –∑–∞–Ω—è—Ç–æ—Å—Ç–∏", yaxis_title="–ß–µ–ª–æ–≤–µ–∫")
        st.plotly_chart(fig3, use_container_width=True)

    # === –í–∫–ª–∞–¥–∫–∞ 3: –ö–∞–ø–∏—Ç–∞–ª –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ ===
    with tab3:
        st.subheader("–ö–∞–ø–∏—Ç–∞–ª –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏")
        
        # –ö–∞–ø–∏—Ç–∞–ª
        fig4 = px.line(df, x="date", y="capital_inventory", title="–û–±—ä—ë–º –∫–∞–ø–∏—Ç–∞–ª–∞ –≤ —Ü–µ–Ω–∞—Ö 2016 –≥–æ–¥–∞")
        fig4.update_traces(mode="lines+markers", line=dict(color="#085800"),
                           marker=dict(size=6, line=dict(width=1,color="#085800"), color="white"),
                           hovertext=df["quarter_label"])
        st.plotly_chart(fig4, use_container_width=True)

        # –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏
        fig5 = px.line(df, x="date", y="investments", title="–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–æ–Ω–¥—ã –≤ —Ü–µ–Ω–∞—Ö 2016 –≥–æ–¥–∞")
        fig5.update_traces(mode="lines+markers", line=dict(color="#085800"),
                           marker=dict(size=6, line=dict(width=1,color="#085800"), color="white"),
                           hovertext=df["quarter_label"])
        st.plotly_chart(fig5, use_container_width=True)

else:
    st.info("‚¨ÜÔ∏è –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞—à–±–æ—Ä–¥–∞")
